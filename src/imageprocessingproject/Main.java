/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageprocessingproject;

import java.awt.BorderLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author linganesan
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private File PathIm = null; 
    private File savepath = null; 
    String namePathImage = null;
    JFileChooser chooser = new JFileChooser(".");
    private JPanel jContentPane1 = null;
    private JPanel jContentPane2 = null;
    JPanel panel = null;
    JTextArea textArea = null;
    RGBchannel channel;
    Metadata metadata;
    BufferedImage image =null;
    private boolean savetrigger = true;
    
    public Main() {
        initComponents();
        closedMenuItems();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openmenu = new javax.swing.JMenuItem();
        savemenu = new javax.swing.JMenuItem();
        saveasmenu = new javax.swing.JMenuItem();
        metaDatamenu = new javax.swing.JMenuItem();
        closemenu = new javax.swing.JMenuItem();
        exitmenu = new javax.swing.JMenuItem();
        rgbmenu = new javax.swing.JMenu();
        clonemenu = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        jMenuItem6.setText("jMenuItem6");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Processing Tool");
        setForeground(new java.awt.Color(195, 243, 231));
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 530, 390));

        jMenu1.setText("File");

        openmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/open.jpg"))); // NOI18N
        openmenu.setText("Open");
        openmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openmenuActionPerformed(evt);
            }
        });
        jMenu1.add(openmenu);

        savemenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        savemenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save.png"))); // NOI18N
        savemenu.setText("Save");
        savemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savemenuActionPerformed(evt);
            }
        });
        jMenu1.add(savemenu);

        saveasmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/saveas.png"))); // NOI18N
        saveasmenu.setText("Save As");
        saveasmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasmenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveasmenu);

        metaDatamenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Metadata.jpg"))); // NOI18N
        metaDatamenu.setText("MetaData");
        metaDatamenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metaDatamenuActionPerformed(evt);
            }
        });
        jMenu1.add(metaDatamenu);

        closemenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        closemenu.setText("Close");
        closemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closemenuActionPerformed(evt);
            }
        });
        jMenu1.add(closemenu);

        exitmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Exit.jpg"))); // NOI18N
        exitmenu.setText("Exit");
        exitmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitmenu);

        jMenuBar1.add(jMenu1);

        rgbmenu.setText("Edit");

        clonemenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clone.png"))); // NOI18N
        clonemenu.setText("Clone");
        rgbmenu.add(clonemenu);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/RGB.jpg"))); // NOI18N
        jMenuItem7.setText("RGBChannel");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        rgbmenu.add(jMenuItem7);

        jMenuBar1.add(rgbmenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openmenuActionPerformed
            openDialog();
                  
    }//GEN-LAST:event_openmenuActionPerformed

    private void closemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closemenuActionPerformed
       closedMenuItems();
        
        
    }//GEN-LAST:event_closemenuActionPerformed

    private void savemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savemenuActionPerformed
       if(savetrigger)
           saveAs();
       else
           save();
    }//GEN-LAST:event_savemenuActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        channel = new RGBchannel(namePathImage);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void metaDatamenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaDatamenuActionPerformed
        metadata = new Metadata();
        textArea =metadata.readAndDisplayMetadata(namePathImage);
        jTabbedPane1.add("MetaData",textArea);
    }//GEN-LAST:event_metaDatamenuActionPerformed

    private void saveasmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasmenuActionPerformed
        saveAs();
      
    }//GEN-LAST:event_saveasmenuActionPerformed

    private void exitmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitmenuActionPerformed
    
    private void save(){
        BufferedImage bi = null;
        
        try {
            bi = ImageIO.read(PathIm);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
      try {
        ImageIO.write(bi,"jpeg", savepath);
        } catch (IOException ex) {
       }
    
    
    
    }
    
    private void saveAs(){
        BufferedImage bi = null;
        
        try {
            bi = ImageIO.read(PathIm);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Demonstrate "Save" dialog:
        File saveFile = new File("ImageName." + "png");
        JFileChooser chooser = new JFileChooser();
        chooser.setSelectedFile(saveFile);
        int rval = chooser.showSaveDialog(this);
        if (rval == JFileChooser.APPROVE_OPTION) {
            saveFile = chooser.getSelectedFile();
            savepath=saveFile;
            try {
                 ImageIO.write(bi,"jpeg", saveFile);
                   savetrigger =false;
            } catch (IOException ex) {
           }
        }
    }
    
    private void closedMenuItems(){
        savemenu.setEnabled(false);
        saveasmenu.setEnabled(false);
        metaDatamenu.setEnabled(false);
        closemenu.setEnabled(false);
        clonemenu.setEnabled(false);
        rgbmenu.setEnabled(false);
        openmenu.setEnabled(true);
        namePathImage = null;
        savepath = null;
        PathIm = null;
        jTabbedPane1.removeAll();
        image=null;
    } 
   
    private void openMenuItems(){
        savemenu.setEnabled(true);
        saveasmenu.setEnabled(true);
        metaDatamenu.setEnabled(true);
        closemenu.setEnabled(true);
        clonemenu.setEnabled(true);
        rgbmenu.setEnabled(true);
        openmenu.setEnabled(false);
    } 
    
    private void openDialog() {
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            //System.out.println("selectedFile = " + chooser.getSelectedFile());
            namePathImage = chooser.getSelectedFile().getAbsolutePath();
            //System.out.println("namePathImage = " + namePathImage);
            
            try {
                panel = getJContentPane1();
                jTabbedPane1.add(namePathImage,panel);
                 openMenuItems();
                } catch(IOException e) {
                System.out.println("io error: " + e.getMessage());
                return;
            }
        }
    }
    
    private JPanel getJContentPane1() throws IOException {
        if (jContentPane1 == null) {
            jContentPane1 = new JPanel();
            jContentPane1.setLayout(new BorderLayout());
        }
       
        jContentPane1.removeAll();
        JLabel label = new JLabel();
        label.setHorizontalAlignment(JLabel.CENTER);
        if(namePathImage != null) {
            File file = new File(namePathImage);
            PathIm =file;
            System.out.println("file path = " + file.getPath());
            image = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(image);
            label.setIcon(icon);
        } else {
            label.setText("namePathImage = " + namePathImage);
        }
        jContentPane1.add(label, BorderLayout.CENTER);
        jContentPane1.revalidate();
        return jContentPane1;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem clonemenu;
    private javax.swing.JMenuItem closemenu;
    private javax.swing.JMenuItem exitmenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem metaDatamenu;
    private javax.swing.JMenuItem openmenu;
    private javax.swing.JMenu rgbmenu;
    private javax.swing.JMenuItem saveasmenu;
    private javax.swing.JMenuItem savemenu;
    // End of variables declaration//GEN-END:variables
}
